<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Mongodb ReplicatSet 认证（KeyFile）]]></title>
    <url>%2F2017%2F07%2F27%2FMongodb-%E9%9B%86%E7%BE%A4%E8%AE%A4%E8%AF%81%EF%BC%88KeyFile%EF%BC%89%2F</url>
    <content type="text"><![CDATA[:point_right: Author: Nutao :point_left: MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。在高负载的情况下，添加更多的节点，可以保证服务器性能。MongoDB的安全设置（特别是集群安全）一直是比较恼人的。那今天这篇文章就是来和大家聊聊使用Key File的ReplicatSet + User Role认证。 1. 下载MongoDB并创建数据文件夹MongoDB的下载可以直接通过镜像源或者是去官网下载安装包的方式，这里就不再赘述了。默认大家都会下载和安装。 12345678# 配置文件夹mkdir conf# 日志文件夹mkdir log# 日志文件touch log/1.log# 认证文件夹mkdir key 2. 生成KeyFIle 随机生成keyFile或者手动写入,key的长度必须是6-1024的base64字符，unix下必须相同组权限 12cd keyopenssl rand -base64 600 &gt; mongodb.key 查看内容 1234567891011xV7Ilo4O3+GHb57LECdoQwJ2u5DrcUsgHhzfXRrvvRVsnDaGNpp3qOvlTm1p3PjCL8gkVAV2vG/L8yG+HdBYgbZ/cEW49tlj/CSuK7wd4g/E40jk3uJPb8nMyXsZk4W16TAL/5Teq5mY4VqAnuY1JqfPwgIyOYMn9ZCs5Wv/htnYR2n14hiw4bXe2ADaiD42kn7QhbuXxQBHxx3Yb/KTlEBqAm0aOAAueSbDvDwcnrsxoEcMnWq9gAhxzNmh9nv7E3b7JqKn/jo+ZIrfAropvbz7JqcPIUp0yfDsrolIlvRn965Z/+3ZJMQgU/QrLNjYwNcj7SqMXoXikTCalLycIbSWymX9dCMjOJ259k/ieU3LlGtLvWmozFlsG/Yu50w+kQ3uIH1Rq8KH1Gg35dtjr8sbObD/W4KEelwdTm3WqJIRZVVu6CYkDjBeSpXPSnrxC+DnN4U7PEZ8O07MRDps/oXcK2dXv1FmaoeTnQ7BzLITc0FSAa8oT4llBN2rXzQnXXdlLoZ8H71Z0+OeD1/h9qGIYfB3bKWzeoPY2cd3b37lQe9a5UVPX+1GEyiut5kvLgF3dgJ99/VmSvzBCdgwiMOu0eNxBvedqFnchMtqth85WJRMIcS5p2Pa8z7Wkjav8wUdPDf4udv7b4x8cgEdv4kNB/PPtHTUTsP51Y0Zlds= 修改key的权限 1234# 这里的权限一定要比 600(rw) 低, 否则会报 Permission 太高的错误(在log中)chmod 600 mongodb.key# 查看权限ls -l 1-rw------- 1 root root 1085 Jul 26 16:03 mongodb.key 将 keyFile 分发到每一个节点（如果是物理机） 3. 配置文件 模板 mongod.conf 12345678910111213141516171819202122232425262728293031323334353637383940# for documentation of all options, see:# http://docs.mongodb.org/manual/reference/configuration-options/# Where and how to store data.storage: dbPath: /db/mongodb3/data journal: enabled: true directoryPerDB: true# engine:# mmapv1:# wiredTiger:# where to write logging data.systemLog: destination: file logAppend: true path: /db/mongodb3/log/1.log# network interfacesnet: port: 28017 # bindIp: 127.0.0.1processManagement: fork: true# 指定keyFile后会自动开启authsecurity: keyFile: /db/mongodb3/key/key#operationProfiling:replication: replSetName: DBTEST oplogSizeMB: 20480#sharding:## Enterprise-Only Options:#auditLog:#snmp: 注意: 所有的机器节点都要在防火墙上开启 mongodb 需要的端口 keyFile的路径, 以及各种参数的大小写 分片集或者复制集的每一个节点(物理或者虚拟)都要分开配置配置文件以及keyFile 3. 启动在每一个节点执行 12# 配置文件名自定（可以使用conf，yaml）mongod -f mongod.conf 123about to fork child process, waiting until server is ready for connections.forked process: 9221child process started successfully, parent exiting 4. 配置复制集 连接Mongo [任意一个节点] 1mongo --port 28017 配置: 123456# 最好是一次性初始化rs.initiate(&#123;_id:"cisdi",members:[&#123;_id:0,host:"x.x.x.x:28017",priority:5&#125;,&#123;_id:1,host:"x.x.x.x:28017",priority:10&#125;,&#123;_id:2,host:"x.x.x.x:28018",arbiterOnly:true&#125;]&#125;) 或者用 123456# 添加rs节点rs.add("xxxx:port")# 添加rs仲裁节点rs.addArb("xxxx:port")# 删除rs节点rs.remove("xxxx:port") 创建用户: Notice： 你创建的第一个用户后，本地实例登陆失效，必须进行验证。 第一个用户必须创建其他用户的权限，如userAdminAnyDatabase,root权限用户 如果至少有一个用户没有创建用户的权限，一旦本地异常关闭你可能无法创建或修改新的特权用户 创建命令： 123456db.createUser(&#123; user:&quot;root&quot;, pwd:&quot;123456&quot;, roles:[&#123;role:&quot;root&quot;,db:&quot;admin&quot;&#125;]&#125;); 用户权限 123456# 全局超级管理员&#123;role:"root",db:"admin"&#125;# userAdminAnyDatabase 任何一个数据库的Admin用户&#123; role: "userAdminAnyDatabase", db: "admin" &#125;# clusterAdmin角色授予对复制操作的访问权限，例如配置副本集。&#123; "role" : "clusterAdmin", "db" : "admin" &#125; 数据库 Role: dbAdmin dbOwner数据库所有者可以对数据库执行任何管理操作。这个角色组合由授予的权限readWrite， dbAdmin和userAdmin角色 userAdmin提供在当前数据库上创建和修改角色和用户的功能。该角色还间接地提供 对数据库的超级用户访问，或者如果作用于admin数据库的集群。该userAdmin角色允许用户授予任何用户任何特权，包括自己。 read对当前数据库的读操作 readWrite对当前数据库的读&amp;写操作 全局 Role： readAnyDatabase （全局任何数据库读） readWriteAnyDatabase userAdminAnyDatabase （全局用户管理） dbAdminAnyDatabase（全局数据库管理） 集群 Role： clusterAdmin提供最大的集群管理访问。这个角色组合由授予的权限clusterManager， clusterMonitor和hostManager角色 clusterManager在集群上提供管理和监控动作。具有该角色的用户可以访问config和local数据库，其在分片和复制所使用的 clusterMonitor提供对监控工具（如MongoDB Cloud Manager和Ops Manager监控代理）的只读访问 。 hostManager提供监控和管理服务器的能力。 设置从库可读1rs.slaveOk() 设置读写方式 123456#Primary #从主的读，默认#primaryPreferred #基本上从主的读，主不可用时，从从的读#secondary #从从的读#secondaryPreferred #基本上从从的读，从不可用时，从主的读#nearest #从网络延迟最小的读db.getMongo().setReadPref('secondaryPreferred') 关闭服务 使用db admin关闭 12345# 1. 登陆mongo# 2. 使用adminuse admin# 3. 关闭mongodb服务db.shutdownServer(); 通过mongod关闭 1mongod --shutdown --dbpath path 通过PID关闭 12# 找到mongodb.pidkill -2 mongodb.pid]]></content>
      <categories>
        <category>MongoDB</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu 分区（目录）挂载/扩容]]></title>
    <url>%2F2017%2F07%2F17%2FUbuntu-%E5%88%86%E5%8C%BA%EF%BC%88%E7%9B%AE%E5%BD%95%EF%BC%89%E6%8C%82%E8%BD%BD-%E6%89%A9%E5%AE%B9%2F</url>
    <content type="text"><![CDATA[这次写的教程是经过我多次验证，用于对Ubuntu分区（目录）操作的一些经验。分享给大家，希望能够有所帮助。 友善提醒：硬盘操作有风险，请注意备份自己的重要资料。如果不熟练，请在虚拟机上自己多操作几次，再在Server上面操作 1.为啥会被分区容量所困扰？通常情况下，我们在使用Ubuntu还是没啥大毛病。可是有一天，突然在解开锁屏的时候，突然弹出如下警告。。。 系统磁盘容量不足！！！这个时候就有点烦心了。左思右想，有如下几种应急方法（欢迎添加） 先去删一波 /tmp, /var/cache/apt/archives下面的临时文件， 删掉不用的软件和遗留的目录、日志 autoremove, autoclean 删掉多余的 lib 删掉/home下面多余的文档 添加新的硬盘前三种方法都是暂时性的应急，不是长久之计。而且，当你的硬盘里面存了大量的重要的资料的时候（譬如用户的数据，重要的数据文件等），这个时候就不得不采用第四种方案了。 解决方案 将新的硬盘挂载到需要添加存储介质的目录下（根据实际需要） 1. 查看磁盘信息1sudo fdisk -l 作为测试，我选取 /dev/sda5, 想要将其挂载到 /home/nutao/disk/D 下面 查看硬盘使用情况用如下命令：1df -kh 2. 查看硬盘 UUID 和 磁盘类型1sudo blkid 用记事本或者其他工具记录下 /dev/sda5 的UUID和分区格式（建议将新的硬盘分区为ext4） 3. 取消挂载目标盘1sudo umount /dev/sda5 4. 编辑 /etc/fstab 文件1sudo vi /etc/fstab 追加一行内容1UUID=0008DCD1000EA709 /home/nutao/disk/D ntfs defaults 0 2 其中第一列为UUID, 第二列为挂载目录（该目录必须为空目录），第三列为文件系统类型，第四列为参数，第五列0表示不备份，最后一列必须为２或0(除非引导分区为1) 5. 更新引导（千万记得更新，否则重启会出错）12sudo update-grubsudo update-grub2 Linux下分区工具 gparted安装命令1234567891011# Debiansudo apt-get install gparted# Fedorasu -c "yum install gparted"# OpenSUSEsudo zypper install gparted# Ubuntusudo apt-get install gparted]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu 换源，安装&卸载软件]]></title>
    <url>%2F2017%2F07%2F17%2FUbuntu-%E6%8D%A2%E6%BA%90%EF%BC%8C%E5%AE%89%E8%A3%85-%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[国内的筒子们，经常发现在update的时候各种卡。。。有时候心情好，等等也就罢了。万一某一天急着安装软件，那种状态下，真的是多等一秒感觉都是心烦气躁的。所以，本文就来跟大家聊聊在Ubuntu 中换源，安装&amp;卸载软件的那些事，欢迎各位一起交流。。。 1. 查找国内的开源镜像提供的源地址 Ubuntu的源的list文件位于 /etc/apt/sources.list 高校镜像源（国内其他大学也有提供，可自行查找）清华大学开源镜像站 中科大开源镜像站 企业镜像源（其他企业的请自行查找）阿里云开源镜像站 网易开源镜像站 这里以清华源为例 先去查一下清华源的帮助文档，戳 清华大学开源镜像站 ，选择相匹配的Ubuntu的版本，会得到软件源镜像的地址。 接下来直接替换一下系统的source.list文件~~~ 1234# 备份一下sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak# 修改sudo vi /etc/apt/sources.list 将文档里面所有的内容删除，然后替换为清华镜像提供的软件源镜像的地址。例如我用的 16.04 版， 替换为： 123456789# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse 然后再update一下，你会发现速度还是有明显的提升的。1sudo apt update 2. 使用apt安装软件这个就不多说了，比较简单，譬如安装tree1sudo apt install tree -y 这里的 -y 参数是为了在安装的时候默认选择yes 3. deb包安装&amp;卸载（需要先下载好） 安装命令 1sudo dpkg -i xxx.deb 安装依赖（如果提示需要的话） 1sudo apt-get install -f 自动清除残留配置文件 12sudo apt-get autocleansudo apt-get autoremove 完全卸载 1sudo apt-get remove --purge name 一般来说，这样的卸载会比较干净地卸载掉软件。有些没有办法自动删除的文件，可以手动去删除掉 4. 另一种deb包安装方式12# cd到安装包目录sudo apt install ./xxxx.deb 5. 安装filename.tar.gz软件 解压 1tar -xzvf file.tar.gz 然后在解压目录或者bin文件夹中执行setup.sh文件。。。这个一般不定，安装前最好查一下官网说明 6. 源码安装有些软件没有被收录进软件镜像源，或者说开发者需要去使用他们最新的版本，这时候就要自己去他们的官网或者是代码托管平台下载最新的Linux源码，自己来build。 这种方式安装需要解决很多的依赖。。。。安装前，多问问度娘，Google 此处还是以tree为例： 先去 Tree FTP 下载最新的源码包 解压 12345tar zxf tree-1.7.0.tgzcd tree-1.7.0/make and installsudo makesudo make install 如果没有配置g++环境，先用apt安装build-essential OK, 大功告成1234567891011121314151617181920212223242526272829nutao@master:~/Public/tree-1.7.0$ tree.├── CHANGES├── color.c├── color.o├── doc│ ├── tree.1│ ├── tree.1.fr│ └── xml.dtd├── hash.c├── hash.o├── html.c├── html.o├── INSTALL├── json.c├── json.o├── LICENSE├── Makefile├── README├── strverscmp.c├── TODO├── tree├── tree.c├── tree.h├── tree.o├── unix.c├── unix.o├── xml.c└── xml.o 常用压缩文件的解压命令1、.tar 用 tar –xvf 解压2、.gz 用 gzip -d或者gunzip 解压3、.tar.gz和.tgz 用 tar –xzf 解压4、.bz2 用 bzip2 -d或者用bunzip2 解压5、.tar.bz2用tar –xjf 解压6、.Z 用 uncompress 解压7、.tar.Z 用tar –xZf 解压8、.rar 用 unrar e解压9、.zip 用 unzip 解压]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu16.04 Grub Rescue]]></title>
    <url>%2F2017%2F07%2F13%2FUbuntu16-04-Grub-Rescue%2F</url>
    <content type="text"><![CDATA[如果某一天, 你不小心扩展了一下你的 / 目录, 又忘记了更新 grub 引导. 不好意思, 你有麻烦了 解决办法 1. ls 一下所有的盘符1grub rescue&gt; ls 2. 找/boot/grub的分区 如果你的 /boot 没有单独分区, 请执行 1grub rescue&gt; ls (hd0,msdosx)/boot/grub 如果你的 /boot 单独分区啦, 请执行 1grub rescue&gt; ls (hd0,msdosx)/grub ls出如下的目录, 恭喜你找到 /boot 路径了 3. 修复grub引导 假设/boot 在(hd0,msdos3) 中 12345# /boot 单独分区set root=(hd0,msdos3)set prefix=(hd0,msdos3)/grubinsmod normalnormal 12345# /boot 没有单独分区set root=(hd0,msdos3)set prefix=(hd0,msdos3)/boot/grubinsmod normalnormal 正常情况下, 执行完后, 电脑就能开机进入桌面啦然后, 还没有结束. (这时千万不要关机, 否则前面步骤再来一次)在正常进入系统以后… 4. 更新系统 grub 引导12sudo update-grubsudo update-grub2 打印出如下日志(我是双系统)1234567Generating grub configuration file ...Found linux image: /boot/vmlinuz-4.4.0-66-genericFound initrd image: /boot/initrd.img-4.4.0-66-genericFound memtest86+ image: /memtest86+.elfFound memtest86+ image: /memtest86+.binFound Windows 10 (loader) on /dev/sda1done 然后重新安装grub 1234nutao@nutao-HP:~$ sudo grub-install /dev/sda# 日志Installing for i386-pc platform.Installation finished. No error reported. OK, 一切搞定]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F07%2F13%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post123hexo new "My New Post"# ORhexo n "My New Post" More info: Writing Run server123hexo server# ORhexo s More info: Server Generate static files123hexo generate# ORhexo g More info: Generating Deploy to remote sites123hexo deploy# ORhexo d More info: Deployment]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>