<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>数据库测试神器==&gt;YCSB</title>
    <url>/2017/11/30/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B5%8B%E8%AF%95%E7%A5%9E%E5%99%A8-YCSB/</url>
    <content><![CDATA[<h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p>YCSB, 英文全称：Yahoo! Cloud Serving Benchmark (YCSB) 。是 Yahoo 公司的一个用来对云服务进行基础测试的工具, 目标是促进新一代云数据服务系统的性能比较。由于它集成了大多数常用的数据库的测试代码，所以，它也是数据库测试的一大利器.</p>
<a id="more"></a>
<p>项目Github地址: <a href="https://github.com/brianfrankcooper/YCSB" target="_blank" rel="external">YCSB</a></p>
<p>文中部分资料翻译自：<a href="https://github.com/brianfrankcooper/YCSB/wiki" target="_blank" rel="external">https://github.com/brianfrankcooper/YCSB/wiki</a></p>
<h2 id="配置YCSB环境"><a href="#配置YCSB环境" class="headerlink" title="配置YCSB环境"></a>配置YCSB环境</h2><blockquote>
<p>Java</p>
</blockquote>
<ul>
<li>到 <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="external">Oracle</a> 下载相应的Java版本 </li>
<li>或者直接用 apt-get 下载, 教程<a href="https://www.evernote.com/shard/s665/sh/e9471479-2b1e-4da2-811c-52cfd529b988/e02b25b3d16554b0f83cd8270b5f1fa7" target="_blank" rel="external">Nutao-Ubuntu 安装java</a></li>
<li>验证JAVA是否安装成功 <strong>java -version</strong>:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ java -version</div><div class="line"></div><div class="line">java version &quot;1.8.0_131&quot;</div><div class="line">Java(TM) SE Runtime Environment (build 1.8.0_131-b11)</div><div class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)</div></pre></td></tr></table></figure>
<blockquote>
<p>Maven</p>
</blockquote>
<ul>
<li>到国内开源镜像下载Maven, 推荐使用<a href="https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/" target="_blank" rel="external">TUNA-清华开源镜像站</a></li>
<li>配置Maven</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 解压</span></div><div class="line">tar -zxvf apache-maven-3.5.0-bin.tar.gz -C /usr/<span class="built_in">local</span></div><div class="line"><span class="comment"># 配置MAVEN_HOME</span></div><div class="line">sudo vi /etc/profile</div></pre></td></tr></table></figure>
<ul>
<li>追加</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment">#Maven_home</span></div><div class="line"><span class="built_in">export</span> MAVEN_HOME=/home/cisdi/software/apache-maven-3.5.0</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;MAVEN_HOME&#125;</span>/bin:<span class="variable">$PATH</span></div></pre></td></tr></table></figure>
<ul>
<li>然后 Source</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="built_in">source</span> /etc/profile</div></pre></td></tr></table></figure>
<ul>
<li>注销或重启后生效( 不重启在当前Shell 下生效)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 验证</span></div><div class="line">$ mvn -version</div><div class="line"></div><div class="line">Apache Maven 3.5.0 (ff8f5e7444045639af65f6095c62210b5713f426; 2017-04-04T03:39:06+08:00)</div><div class="line">Maven home: /home/cisdi/software/apache-maven-3.5.0</div><div class="line">Java version: 1.8.0_131, vendor: Oracle Corporation</div><div class="line">Java home: /usr/lib/jvm/java-8-oracle/jre</div><div class="line">Default locale: en_US, platform encoding: UTF-8</div><div class="line">OS name: <span class="string">"linux"</span>, version: <span class="string">"4.4.0-83-generic"</span>, arch: <span class="string">"amd64"</span>, family: <span class="string">"unix"</span></div></pre></td></tr></table></figure>
<h3 id="下载YCSB"><a href="#下载YCSB" class="headerlink" title="下载YCSB"></a>下载YCSB</h3><blockquote>
<p>目前最新的稳定版本是 <a href="https://github.com/brianfrankcooper/YCSB/releases/tag/0.12.0" target="_blank" rel="external">0.12.0</a> （下载特别慢, 最好是挂VPN或者用云服务器下载）<br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">curl -O --location https://github.com/brianfrankcooper/YCSB/releases/download/0.12.0/ycsb-0.12.0.tar.gz</div><div class="line">tar xfvz ycsb-0.12.0.tar.gz</div><div class="line"><span class="built_in">cd</span> ycsb-0.12.0</div></pre></td></tr></table></figure></p>
<p>或者直接在Github上克隆 (编译巨慢, 要下很多的包)<br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">git <span class="built_in">clone</span> git://github.com/brianfrankcooper/YCSB.git</div><div class="line"><span class="built_in">cd</span> YCSB</div><div class="line"></div><div class="line"><span class="comment"># 全量编译</span></div><div class="line">mvn clean package</div><div class="line"><span class="comment"># 部分编译, 以MongoDB为例</span></div><div class="line">mvn -pl com.yahoo.ycsb:mongodb-binding -am clean package</div></pre></td></tr></table></figure></p>
</blockquote>
<p>编译的命令参考其项目Readme.每一个组件都可以单独编译，相当良心。</p>
<p>测试是否安装成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">./bin/ycsb</div></pre></td></tr></table></figure>
<p><img src="/2017/11/30/数据库测试神器-YCSB/1499160424514.png" alt="安装成功"></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="编写Workload（这部分英文比较简单，将就看看吧）"><a href="#编写Workload（这部分英文比较简单，将就看看吧）" class="headerlink" title="编写Workload（这部分英文比较简单，将就看看吧）"></a>编写Workload（这部分英文比较简单，将就看看吧）</h3><p><a href="https://github.com/brianfrankcooper/YCSB/wiki/Core-Properties" target="_blank" rel="external">资料来源</a></p>
<blockquote>
<p>Core YCSB properties</p>
</blockquote>
<ul>
<li><strong>workload</strong>: workload class to use (e.g. com.yahoo.ycsb.workloads.CoreWorkload)</li>
<li><strong>db</strong>: database class to use. Alternatively this may be specified on the command line. (default: com.yahoo.ycsb.BasicDB)</li>
<li><strong>exporter</strong>: measurements exporter class to use (default: com.yahoo.ycsb.measurements.exporter.TextMeasurementsExporter)</li>
<li><strong>exportfile</strong>: path to a file where output should be written instead of to stdout (default: undefined/write to stdout)</li>
<li><strong>threadcount</strong>: number of YCSB client threads. Alternatively this may be specified on the command line. (default: 1)</li>
<li><strong>measurementtype</strong>: supported measurement types are histogram and timeseries (default: histogram)</li>
</ul>
<blockquote>
<p>Core workload package properties</p>
</blockquote>
<ul>
<li><strong>fieldcount</strong>: the number of fields in a record (default: 10)</li>
<li><strong>fieldlength</strong>: the size of each field (default: 100)</li>
<li><strong>readallfields</strong>: should reads read all fields (true) or just one (false) (default: true)</li>
<li><strong>readproportion</strong>: what proportion of operations should be reads (default: 0.95)</li>
<li><strong>updateproportion</strong>: what proportion of operations should be updates (default: 0.05)</li>
<li><strong>insertproportion</strong>: what proportion of operations should be inserts (default: 0)</li>
<li><strong>scanproportion</strong>: what proportion of operations should be scans (default: 0)</li>
<li><strong>readmodifywriteproportion</strong>: what proportion of operations should be read a record, modify it, write it back (default: 0)</li>
<li><strong>requestdistribution</strong>: what distribution should be used to select the records to operate on – uniform, zipfian or latest (default: uniform)</li>
<li><strong>maxscanlength</strong>: for scans, what is the maximum number of records to scan (default: 1000)</li>
<li><strong>scanlengthdistribution</strong>: for scans, what distribution should be used to choose the number of records to scan, for each scan, between 1 and maxscanlength (default: uniform)</li>
<li><strong>insertorder</strong>: should records be inserted in order by key (“ordered”), or in hashed order (“hashed”) (default: hashed)</li>
<li><strong>operationcount</strong>: number of operations to perform.</li>
<li><strong>maxexecutiontime</strong>: maximum execution time in seconds. The benchmark runs until either the operation count has exhausted or the maximum specified time has elapsed, whichever is earlier.</li>
<li><strong>table</strong>: the name of the table (default: usertable)</li>
<li><strong>recordcount</strong>: number of records to load into the database initially (default: 0)</li>
<li><strong>core_workload_insertion_retry_limit</strong>: number of attempts for any failed insert operation (default: 0)</li>
<li><strong>core_workload_insertion_retry_interval</strong>: interval between retries, in seconds (default: 3)</li>
</ul>
<blockquote>
<p>MongoDB的 workload模板</p>
</blockquote>
<p><a href="https://github.com/brianfrankcooper/YCSB/tree/master/mongodb" target="_blank" rel="external">mongodb参数设置</a><br><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 记录数</span></div><div class="line">recordcount = <span class="number">1000000</span></div><div class="line"><span class="comment"># 操作次数</span></div><div class="line">operationcount = <span class="number">10000000</span></div><div class="line"><span class="comment"># 使用的workload class</span></div><div class="line">workload=com.yahoo.ycsb.workloads.CoreWorkload</div><div class="line"><span class="comment"># 读取所有的字段</span></div><div class="line">readallfields=true</div><div class="line"><span class="comment"># 读操作的占比</span></div><div class="line">readproportion=<span class="number">0.1</span></div><div class="line"><span class="comment"># 更新操作占比</span></div><div class="line">updateproportion=<span class="number">0.9</span></div><div class="line"><span class="comment"># 插入操作的占比</span></div><div class="line">insertproportion=<span class="number">0</span></div><div class="line"><span class="comment"># 请求分布方式</span></div><div class="line">requestdistribution=zipfian</div><div class="line"><span class="comment"># 插入顺序</span></div><div class="line">insertorder=ordered</div><div class="line"><span class="comment"># 字段长度</span></div><div class="line">fieldlength=<span class="number">8</span></div><div class="line"><span class="comment"># 单元格个数</span></div><div class="line">fieldcount=<span class="number">20</span></div><div class="line"><span class="comment"># 表名</span></div><div class="line">table = test</div><div class="line"><span class="comment"># 线程数(这里最好不要指定, 在执行的时候用 -threads 指定)</span></div><div class="line"><span class="comment"># threadcount=32</span></div><div class="line"></div><div class="line"><span class="comment"># mongodb的url</span></div><div class="line">mongodb.url=mongodb://<span class="number">10.66</span><span class="number">.3</span><span class="number">.31</span>:<span class="number">28001</span></div><div class="line"><span class="comment"># MongoDB的写安全设置</span></div><div class="line">mongodb.writeConcern = acknowledged</div><div class="line"><span class="comment"># 批量写入的数据条数</span></div><div class="line">mongodb.batchsize = <span class="number">1000</span></div><div class="line"><span class="comment"># 最大连接数</span></div><div class="line">mongodb.maxconnections = <span class="number">1000</span></div></pre></td></tr></table></figure></p>
<h3 id="执行测试"><a href="#执行测试" class="headerlink" title="执行测试"></a>执行测试</h3><p><a href="https://github.com/brianfrankcooper/YCSB/wiki/Running-a-Workload" target="_blank" rel="external">执行参数</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># 可以通过此命令查看ｙｃｓｂ的参数</div><div class="line">./bin/ycsb</div></pre></td></tr></table></figure>
<blockquote>
<p>shell命令</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">./bin/ycsb load mongodb-async -s -threads 20 -P workloads/mongodb/b &gt; out</div></pre></td></tr></table></figure>
<ul>
<li>-s 代表输出status</li>
<li>-threads 指定线程数</li>
<li>-P 指定workload</li>
<li>> 代表stdout 输出到 out 文件</li>
</ul>
<blockquote>
<p>测试结果输出</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">cisdi@master:~/Downloads/ycsb-0.12.0$ cat out </div><div class="line"></div><div class="line">mongo connection created with mongodb://10.66.3.31:28001</div><div class="line">[OVERALL], RunTime(ms), 9759.0</div><div class="line">[OVERALL], Throughput(ops/sec), 102469.51531919253</div><div class="line">[TOTAL_GCS_PS_Scavenge], Count, 33.0</div><div class="line">[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 849.0</div><div class="line">[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 8.699661850599446</div><div class="line">[TOTAL_GCS_PS_MarkSweep], Count, 2.0</div><div class="line">[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 166.0</div><div class="line">[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 1.700993954298596</div><div class="line">[TOTAL_GCs], Count, 35.0</div><div class="line">[TOTAL_GC_TIME], Time(ms), 1015.0</div><div class="line">[TOTAL_GC_TIME_%], Time(%), 10.400655804898044</div><div class="line">[CLEANUP], Operations, 20.0</div><div class="line">[CLEANUP], AverageLatency(us), 59.35</div><div class="line">[CLEANUP], MinLatency(us), 3.0</div><div class="line">[CLEANUP], MaxLatency(us), 1051.0</div><div class="line">[CLEANUP], 95thPercentileLatency(us), 15.0</div><div class="line">[CLEANUP], 99thPercentileLatency(us), 1051.0</div><div class="line">[INSERT], Operations, 1000000.0</div><div class="line">[INSERT], AverageLatency(us), 180.985195</div><div class="line">[INSERT], MinLatency(us), 1.0</div><div class="line">[INSERT], MaxLatency(us), 1302527.0</div><div class="line">[INSERT], 95thPercentileLatency(us), 6.0</div><div class="line">[INSERT], 99thPercentileLatency(us), 13.0</div><div class="line">[INSERT], Return=OK, 1000</div><div class="line">[INSERT], Return=BATCHED_OK, 999000</div></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB OPS Manager的搭建及使用</title>
    <url>/2017/07/27/MongoDB-OPS-Manager%E7%9A%84%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>MongoDB OPS Manager 是用于管理MongoDB集群和部署的工具。 通过MMS可以大大简化MongDB的管理部署。</p>
<a id="more"></a>
<h2 id="1-机器"><a href="#1-机器" class="headerlink" title="1. 机器"></a>1. 机器</h2><p><strong>三台机器 (注意修改hosts)</strong></p>
<ul>
<li>master</li>
<li>node1</li>
<li>node2</li>
</ul>
<h2 id="2-安装前准备-ALL"><a href="#2-安装前准备-ALL" class="headerlink" title="2. 安装前准备[ALL]"></a>2. 安装前准备[ALL]</h2><h4 id="NUMA-Settings"><a href="#NUMA-Settings" class="headerlink" title="NUMA Settings"></a>NUMA Settings</h4><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">sysctl -w vm.zone_reclaim_mode=0</div></pre></td></tr></table></figure>
<h4 id="NTP-Settings"><a href="#NTP-Settings" class="headerlink" title="NTP Settings"></a>NTP Settings</h4><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">sudo apt install -y ntp</div><div class="line">service ntp start</div></pre></td></tr></table></figure>
<h4 id="ulimt-settings"><a href="#ulimt-settings" class="headerlink" title="ulimt settings"></a>ulimt settings</h4><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">&gt; <span class="built_in">ulimit</span>  -a</div><div class="line">&gt; sudo vi /etc/security/limits.conf</div></pre></td></tr></table></figure>
<p>追加</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line"><span class="string">mongod</span> <span class="string">soft</span> <span class="string">nproc</span> <span class="number">65535</span></div><div class="line"><span class="string">mongod</span> <span class="string">hard</span> <span class="string">nproc</span> <span class="number">65535</span></div></pre></td></tr></table></figure>
<h4 id="Disable-Transparent-Huge-Pages"><a href="#Disable-Transparent-Huge-Pages" class="headerlink" title="Disable Transparent Huge Pages"></a>Disable Transparent Huge Pages</h4><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">vim /etc/init.d/<span class="built_in">disable</span>-transparent-hugepages</div></pre></td></tr></table></figure>
<p>添加如下脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">### BEGIN INIT INFO</span></div><div class="line"><span class="comment"># Provides:          disable-transparent-hugepages</span></div><div class="line"><span class="comment"># Required-Start:    $local_fs</span></div><div class="line"><span class="comment"># Required-Stop:</span></div><div class="line"><span class="comment"># X-Start-Before:    mongod mongodb-mms-automation-agent</span></div><div class="line"><span class="comment"># Default-Start:     2 3 4 5</span></div><div class="line"><span class="comment"># Default-Stop:      0 1 6</span></div><div class="line"><span class="comment"># Short-Description: Disable Linux transparent huge pages</span></div><div class="line"><span class="comment"># Description:       Disable Linux transparent huge pages, to improve</span></div><div class="line"><span class="comment">#                    database performance.</span></div><div class="line"><span class="comment">### END INIT INFO</span></div><div class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></div><div class="line">  start)</div><div class="line">    <span class="keyword">if</span> [ -d /sys/kernel/mm/transparent_hugepage ]; <span class="keyword">then</span></div><div class="line">      thp_path=/sys/kernel/mm/transparent_hugepage</div><div class="line">    <span class="keyword">elif</span> [ -d /sys/kernel/mm/redhat_transparent_hugepage ]; <span class="keyword">then</span></div><div class="line">      thp_path=/sys/kernel/mm/redhat_transparent_hugepage</div><div class="line">    <span class="keyword">else</span></div><div class="line">      <span class="built_in">return</span> 0</div><div class="line">    <span class="keyword">fi</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">'never'</span> &gt; <span class="variable">$&#123;thp_path&#125;</span>/enabled</div><div class="line">    <span class="built_in">echo</span> <span class="string">'never'</span> &gt; <span class="variable">$&#123;thp_path&#125;</span>/defrag</div><div class="line"></div><div class="line">    <span class="built_in">unset</span> thp_path</div><div class="line">    ;;</div><div class="line"><span class="keyword">esac</span></div></pre></td></tr></table></figure>
<p>验证(重启生效)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">cat /sys/kernel/mm/transparent_hugepage/enabled</div><div class="line">cat /sys/kernel/mm/transparent_hugepage/defrag</div></pre></td></tr></table></figure>
<p>有以下输出表示正确</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">always madvise [never]</div></pre></td></tr></table></figure>
<h2 id="3-安装MongoDB-每台机器上"><a href="#3-安装MongoDB-每台机器上" class="headerlink" title="3. 安装MongoDB(每台机器上)"></a>3. 安装MongoDB(每台机器上)</h2><p><a href="https://www.evernote.com/shard/s665/sh/68b601b3-9fea-46df-9438-8de0f3f83580/50cb5a61f1fa144e79dc93191fdf9ddd" target="_blank" rel="external"><strong>我的笔记-NoSQL-MongoDB单机部署</strong></a></p>
<p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/mongodb/" target="_blank" rel="external"><strong>使用TUNA源安装MongoDB</strong></a></p>
<h4 id="配置ReplicatSet副本"><a href="#配置ReplicatSet副本" class="headerlink" title="配置ReplicatSet副本"></a>配置ReplicatSet副本</h4><p>ReplicatSet结构如下<br><img src="/2017/07/27/MongoDB-OPS-Manager的搭建及使用/1498742983255.png" alt="Alt text"></p>
<p>Primary Node将自己的数据同步到Secondary Node<br><img src="/2017/07/27/MongoDB-OPS-Manager的搭建及使用/1498743011857.png" alt="Alt text"></p>
<p>一旦primary Node挂了，或者10s内无法取得Heartbeat，Secondary Node会选举新的Primary Node</p>
<p><img src="/2017/07/27/MongoDB-OPS-Manager的搭建及使用/1498743284588.png" alt="Alt text"></p>
<h4 id="ALL-修改配置文件-最好自建"><a href="#ALL-修改配置文件-最好自建" class="headerlink" title="[ALL]修改配置文件(最好自建)"></a>[ALL]修改配置文件(最好自建)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 默认mongodb.conf在 /etc/mongodb.conf</span></div><div class="line">vim  /home/cisdi/DBTEST/mongodb/mongod.conf</div></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line"><span class="comment"># for documentation of all options, see:</span></div><div class="line"><span class="comment">#   http://docs.mongodb.org/manual/reference/configuration-options/</span></div><div class="line"></div><div class="line"><span class="comment"># Where and how to store data.</span></div><div class="line"><span class="attr">storage:</span></div><div class="line"><span class="attr">  dbPath:</span> <span class="string">/home/cisdi/DBTEST/mongodb/data</span></div><div class="line"><span class="attr">  journal:</span></div><div class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></div><div class="line"><span class="comment">#  engine:</span></div><div class="line"><span class="comment">#  mmapv1:</span></div><div class="line"><span class="comment">#  wiredTiger:</span></div><div class="line"></div><div class="line"><span class="comment"># where to write logging data.</span></div><div class="line"><span class="attr">systemLog:</span></div><div class="line"><span class="attr">  destination:</span> <span class="string">file</span></div><div class="line"><span class="attr">  logAppend:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  path:</span> <span class="string">/home/cisdi/DBTEST/mongodb/log/mongodb.log</span></div><div class="line"></div><div class="line"><span class="comment"># network interfaces</span></div><div class="line"><span class="attr">net:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">27018</span></div><div class="line"> <span class="comment"># bindIp: 127.0.0.1</span></div><div class="line"></div><div class="line"><span class="attr">processManagement:</span></div><div class="line"><span class="attr">  fork:</span> <span class="literal">true</span></div><div class="line"><span class="comment">#security:</span></div><div class="line"><span class="comment">#operationProfiling:</span></div><div class="line"></div><div class="line"><span class="comment"># 副本</span></div><div class="line"><span class="attr">replication:</span></div><div class="line"><span class="attr">  replSetName:</span> <span class="string">ops_manager</span></div><div class="line"><span class="comment">#sharding:</span></div><div class="line"><span class="comment">## Enterprise-Only Options:</span></div><div class="line"><span class="comment">#auditLog:</span></div><div class="line"><span class="comment">#snmp:</span></div></pre></td></tr></table></figure>
<p>[<strong><code>ALL</code></strong>]启动MongoDB</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">mongod -f /home/cisdi/DBTEST/mongodb/mongod.conf</div></pre></td></tr></table></figure>
<blockquote>
<p>配置方式</p>
</blockquote>
<p>在<strong>任意一台</strong>机器上登录mongo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 我们选master</span></div><div class="line">mongo --port 27018</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment">#Initiate the replica set</span></div><div class="line">rs.initiate()</div><div class="line"><span class="comment">#display the replica set configuration object</span></div><div class="line">rs.conf()</div><div class="line"><span class="comment">#Add the remaining members to the replica set</span></div><div class="line">rs.add(<span class="string">"node1:27018"</span>)</div><div class="line">rs.add(<span class="string">"node2:27018"</span>)</div><div class="line"><span class="comment">#Check the status of the replica set</span></div><div class="line">rs.status()</div></pre></td></tr></table></figure>
<p>Mongo打印如下的JSON表示副本集配置成功 (注意所有的节点都要health:1)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">&#123;</div><div class="line">	<span class="string">"set"</span> : <span class="string">"ops_manager"</span>,</div><div class="line">	<span class="string">"date"</span> : ISODate(<span class="string">"2017-06-27T07:37:35.839Z"</span>),</div><div class="line">	<span class="string">"myState"</span> : 2,</div><div class="line">	<span class="string">"term"</span> : NumberLong(4),</div><div class="line">	<span class="string">"syncingTo"</span> : <span class="string">"node1:27018"</span>,</div><div class="line">	<span class="string">"heartbeatIntervalMillis"</span> : NumberLong(2000),</div><div class="line">	<span class="string">"members"</span> : [</div><div class="line">		&#123;</div><div class="line">			<span class="string">"_id"</span> : 0,</div><div class="line">			<span class="string">"name"</span> : <span class="string">"master:27018"</span>,</div><div class="line">			<span class="string">"health"</span> : 1,</div><div class="line">			<span class="string">"state"</span> : 2,</div><div class="line">			<span class="string">"stateStr"</span> : <span class="string">"SECONDARY"</span>,</div><div class="line">			<span class="string">"uptime"</span> : 771,</div><div class="line">			<span class="string">"optime"</span> : &#123;</div><div class="line">				<span class="string">"ts"</span> : Timestamp(1498549030, 2),</div><div class="line">				<span class="string">"t"</span> : NumberLong(4)</div><div class="line">			&#125;,</div><div class="line">			<span class="string">"optimeDate"</span> : ISODate(<span class="string">"2017-06-27T07:37:10Z"</span>),</div><div class="line">			<span class="string">"syncingTo"</span> : <span class="string">"node1:27018"</span>,</div><div class="line">			<span class="string">"configVersion"</span> : 3,</div><div class="line">			<span class="string">"self"</span> : <span class="literal">true</span></div><div class="line">		&#125;,</div><div class="line">		&#123;</div><div class="line">			<span class="string">"_id"</span> : 1,</div><div class="line">			<span class="string">"name"</span> : <span class="string">"node1:27018"</span>,</div><div class="line">			<span class="string">"health"</span> : 1,</div><div class="line">			<span class="string">"state"</span> : 1,</div><div class="line">			<span class="string">"stateStr"</span> : <span class="string">"PRIMARY"</span>,</div><div class="line">			<span class="string">"uptime"</span> : 625,</div><div class="line">			<span class="string">"optime"</span> : &#123;</div><div class="line">				<span class="string">"ts"</span> : Timestamp(1498549030, 2),</div><div class="line">				<span class="string">"t"</span> : NumberLong(4)</div><div class="line">			&#125;,</div><div class="line">			<span class="string">"optimeDate"</span> : ISODate(<span class="string">"2017-06-27T07:37:10Z"</span>),</div><div class="line">			<span class="string">"lastHeartbeat"</span> : ISODate(<span class="string">"2017-06-27T07:37:34.995Z"</span>),</div><div class="line">			<span class="string">"lastHeartbeatRecv"</span> : ISODate(<span class="string">"2017-06-27T07:37:35.647Z"</span>),</div><div class="line">			<span class="string">"pingMs"</span> : NumberLong(0),</div><div class="line">			<span class="string">"electionTime"</span> : Timestamp(1498548441, 1),</div><div class="line">			<span class="string">"electionDate"</span> : ISODate(<span class="string">"2017-06-27T07:27:21Z"</span>),</div><div class="line">			<span class="string">"configVersion"</span> : 3</div><div class="line">		&#125;,</div><div class="line">		&#123;</div><div class="line">			<span class="string">"_id"</span> : 2,</div><div class="line">			<span class="string">"name"</span> : <span class="string">"node2:27018"</span>,</div><div class="line">			<span class="string">"health"</span> : 1,</div><div class="line">			<span class="string">"state"</span> : 2,</div><div class="line">			<span class="string">"stateStr"</span> : <span class="string">"SECONDARY"</span>,</div><div class="line">			<span class="string">"uptime"</span> : 595,</div><div class="line">			<span class="string">"optime"</span> : &#123;</div><div class="line">				<span class="string">"ts"</span> : Timestamp(1498549030, 2),</div><div class="line">				<span class="string">"t"</span> : NumberLong(4)</div><div class="line">			&#125;,</div><div class="line">			<span class="string">"optimeDate"</span> : ISODate(<span class="string">"2017-06-27T07:37:10Z"</span>),</div><div class="line">			<span class="string">"lastHeartbeat"</span> : ISODate(<span class="string">"2017-06-27T07:37:34.994Z"</span>),</div><div class="line">			<span class="string">"lastHeartbeatRecv"</span> : ISODate(<span class="string">"2017-06-27T07:37:35.780Z"</span>),</div><div class="line">			<span class="string">"pingMs"</span> : NumberLong(0),</div><div class="line">			<span class="string">"syncingTo"</span> : <span class="string">"node1:27018"</span>,</div><div class="line">			<span class="string">"configVersion"</span> : 3</div><div class="line">		&#125;</div><div class="line">	],</div><div class="line">	<span class="string">"ok"</span> : 1</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="4-安装OPS-Manager-ONE"><a href="#4-安装OPS-Manager-ONE" class="headerlink" title="4. 安装OPS Manager[ONE]"></a>4. 安装OPS Manager[ONE]</h2><blockquote>
<p>Notice</p>
</blockquote>
<ul>
<li><strong><code>最好是root安装,否则各种权限问题</code></strong></li>
<li>建议用tgz包, 更容易管理</li>
<li><a href="https://www.mongodb.com/download-center#ops-manager" target="_blank" rel="external">下载OPS Manager</a></li>
</ul>
<h4 id="修改OPS-Manager-配置文件"><a href="#修改OPS-Manager-配置文件" class="headerlink" title="修改OPS Manager 配置文件"></a>修改OPS Manager 配置文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">vi /root/mongodb-mms-3.4.5.424-1.x86_64/conf/conf-mms.properties</div></pre></td></tr></table></figure>
<p>修改  <kbd><strong>mongo.mongoUri</strong></kbd></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">mongo.mongoUri=mongodb://master:27018,node1:27018,node2:27018</div></pre></td></tr></table></figure>
<h4 id="启动-MMS"><a href="#启动-MMS" class="headerlink" title="启动 MMS"></a>启动 MMS</h4><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">./root/mongodb-mms-3.4.5.424-1.x86_64/bin/mongodb-mms start</div><div class="line"></div><div class="line">Starting pre-flight checks</div><div class="line">Successfully finished pre-flight checks</div><div class="line"></div><div class="line">Migrate Ops Manager data</div><div class="line">   Running migrations...[  OK  ]</div><div class="line">Start Ops Manager server</div><div class="line">   Instance 0 starting...................[  OK  ]</div><div class="line">Starting pre-flight checks</div><div class="line">Successfully finished pre-flight checks</div><div class="line"></div><div class="line">Start Backup Daemon...[  OK  ]</div></pre></td></tr></table></figure>
<p>MMS 网页: <a href="http://yourip:8080" target="_blank" rel="external">http://yourip:8080</a></p>
<p><strong>需要先注册一个Admin用户</strong></p>
<h4 id="配置MongoDB集群"><a href="#配置MongoDB集群" class="headerlink" title="配置MongoDB集群"></a>配置MongoDB集群</h4><blockquote>
<p>Cluster架构设计</p>
</blockquote>
<p><img src="/2017/07/27/MongoDB-OPS-Manager的搭建及使用/1498748179964.png" alt="Alt text"></p>
<blockquote>
<p>下载相关版本的 MongoDB</p>
</blockquote>
<p>为了加快集群的部署, 可以预先下载好所需的MongoDB安装包，并将其放置到目录<br><kbd><strong><code>/var/lib/mongodb-mms-automation/mongodb-linux-x86_64-x.x.x</code></strong></kbd><br>例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 解压</span></div><div class="line">tar -zxvf mongodb-linux-x86_64-ubuntu1604-3.4.2.tgz -C /var/lib/mongodb-mms-automation/mongodb-linux-x86_64-3.4.2</div><div class="line"><span class="comment"># 设置权限(最好是先　ｌs -l　查一下用户权限)</span></div><div class="line">sudo chown -R mongodb: /var/lib/mongodb-mms-automation/mongodb-linux-x86_64-3.4.2/</div></pre></td></tr></table></figure>
<blockquote>
<p>新建Cluster</p>
</blockquote>
<p><img src="/2017/07/27/MongoDB-OPS-Manager的搭建及使用/1498553286879.png" alt="Alt text"></p>
<blockquote>
<p>安装Ops Manager Agent (每一个子节点都要安装)</p>
</blockquote>
<p><img src="/2017/07/27/MongoDB-OPS-Manager的搭建及使用/1498552789799.png" alt="Alt text|center|"></p>
<p>选择一个适当的版本下载, 然后根据教程修改相关的参数</p>
<blockquote>
<p>配置Cluster</p>
</blockquote>
<p><img src="/2017/07/27/MongoDB-OPS-Manager的搭建及使用/1498553991402.png" alt="Alt text"><br><img src="/2017/07/27/MongoDB-OPS-Manager的搭建及使用/1498554099458.png" alt="Alt text"></p>
<p><strong><code>注意</code></strong>：</p>
<ul>
<li>选择的Version版本是自己放到　<em>/var/lib/mongodb-mms-automation</em> 的版本</li>
</ul>
<blockquote>
<p><strong>配置完后点击apply，等待所有部署完成</strong></p>
</blockquote>
<p><img src="/2017/07/27/MongoDB-OPS-Manager的搭建及使用/1498554770915.png" alt="Alt text|left|"><br><img src="/2017/07/27/MongoDB-OPS-Manager的搭建及使用/1498554906062.png" alt="Alt text|right|"></p>
<h2 id="5-通过Mongos连接到集群"><a href="#5-通过Mongos连接到集群" class="headerlink" title="5. 通过Mongos连接到集群"></a>5. 通过Mongos连接到集群</h2><blockquote>
<p>检查Mongos部署的位置和端口</p>
</blockquote>
<p><img src="/2017/07/27/MongoDB-OPS-Manager的搭建及使用/1498555116067.png" alt="Alt text"></p>
<blockquote>
<p>连接命令</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">mongo --host node1 --port 27017</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">MongoDB shell version: 3.2.14</div><div class="line">connecting to: node1:27017/<span class="built_in">test</span></div><div class="line">Welcome to the MongoDB shell.</div><div class="line"><span class="comment"># 获取集群分片信息</span></div><div class="line">mongos&gt; db.getCollection(<span class="string">'test'</span>).getShardDistribution()</div><div class="line"></div><div class="line">Shard shard_0 at shard_0/node1:28000,node1:28001,node2:28000</div><div class="line"> data : 1.28GiB docs : 370161 chunks : 34</div><div class="line"> estimated data per chunk : 38.59MiB</div><div class="line"> estimated docs per chunk : 10887</div><div class="line"></div><div class="line">Shard shard_1 at shard_1/node1:28002,node2:28001,node2:28002</div><div class="line"> data : 1.29GiB docs : 372693 chunks : 34</div><div class="line"> estimated data per chunk : 38.85MiB</div><div class="line"> estimated docs per chunk : 10961</div><div class="line"></div><div class="line">Totals</div><div class="line"> data : 2.57GiB docs : 742854 chunks : 68</div><div class="line"> Shard shard_0 contains 49.83% data, 49.82% docs <span class="keyword">in</span> cluster, avg obj size on shard : 3KiB</div><div class="line"> Shard shard_1 contains 50.16% data, 50.17% docs <span class="keyword">in</span> cluster, avg obj size on shard : 3KiB</div></pre></td></tr></table></figure>
<h2 id="6-可能遇到的Bug"><a href="#6-可能遇到的Bug" class="headerlink" title="6. 可能遇到的Bug"></a>6. 可能遇到的Bug</h2><blockquote>
<p>Q1. MMS无法启动或者在MMS执行操作时，总是提示Another Session has published the deploy</p>
</blockquote>
<p>可能原因：</p>
<ul>
<li>管理MMS数据的 MongoDB ReplicatSet Primary Node挂了，而两个Secondary Node在选举的时候出现“间歇性切换”（由于Primary的数据没有Sync到所有的Secondary Node导致的从节点的数据不一致）。从而使导致MMS的Log和启动数据无法加载。</li>
</ul>
<p><strong><code>解决方法：</code></strong><br>由于启动挂掉的Mongod节点需要做长时间的Rollback， 如果没有办法成功Rollback，直接舍弃掉挂掉的Node的数据（<strong>全部删除</strong>）, 然后将其设置为Arbiter Node（仲裁节点，不参与数据存储，仅仅做选举投票使用）。</p>
<p>调整后的MongoDB ReplicateSet结构如下<br><img src="/2017/07/27/MongoDB-OPS-Manager的搭建及使用/1498743360554.png" alt="Alt text"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&gt; rs.status()</div><div class="line">&#123;</div><div class="line">    &quot;set&quot; : &quot;ops_manager&quot;,</div><div class="line">    &quot;date&quot; : ISODate(&quot;2017-06-29T13:10:51.081Z&quot;),</div><div class="line">    &quot;myState&quot; : 1,</div><div class="line">    &quot;term&quot; : NumberLong(3110),</div><div class="line">    &quot;heartbeatIntervalMillis&quot; : NumberLong(2000),</div><div class="line">    &quot;members&quot; : [</div><div class="line">        &#123;</div><div class="line">            &quot;_id&quot; : 0,</div><div class="line">            &quot;name&quot; : &quot;master:27018&quot;,</div><div class="line">            &quot;health&quot; : 1.0,</div><div class="line">            &quot;state&quot; : 1,</div><div class="line">            &quot;stateStr&quot; : &quot;PRIMARY&quot;,</div><div class="line">            &quot;uptime&quot; : 87435,</div><div class="line">            &quot;optime&quot; : &#123;</div><div class="line">                &quot;ts&quot; : Timestamp(6437047226601570, 4),</div><div class="line">                &quot;t&quot; : NumberLong(3110)</div><div class="line">            &#125;,</div><div class="line">            &quot;optimeDate&quot; : ISODate(&quot;2017-06-29T13:10:49.000Z&quot;),</div><div class="line">            &quot;electionTime&quot; : Timestamp(6436975792705503, 1),</div><div class="line">            &quot;electionDate&quot; : ISODate(&quot;2017-06-29T08:33:37.000Z&quot;),</div><div class="line">            &quot;configVersion&quot; : 5,</div><div class="line">            &quot;self&quot; : true</div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            &quot;_id&quot; : 2,</div><div class="line">            &quot;name&quot; : &quot;node2:27018&quot;,</div><div class="line">            &quot;health&quot; : 1.0,</div><div class="line">            &quot;state&quot; : 2,</div><div class="line">            &quot;stateStr&quot; : &quot;SECONDARY&quot;,</div><div class="line">            &quot;uptime&quot; : 16637,</div><div class="line">            &quot;optime&quot; : &#123;</div><div class="line">                &quot;ts&quot; : Timestamp(6437047226601570, 4),</div><div class="line">                &quot;t&quot; : NumberLong(3110)</div><div class="line">            &#125;,</div><div class="line">            &quot;optimeDate&quot; : ISODate(&quot;2017-06-29T13:10:49.000Z&quot;),</div><div class="line">            &quot;lastHeartbeat&quot; : ISODate(&quot;2017-06-29T13:10:50.968Z&quot;),</div><div class="line">            &quot;lastHeartbeatRecv&quot; : ISODate(&quot;2017-06-29T13:10:49.752Z&quot;),</div><div class="line">            &quot;pingMs&quot; : NumberLong(0),</div><div class="line">            &quot;syncingTo&quot; : &quot;master:27018&quot;,</div><div class="line">            &quot;configVersion&quot; : 5</div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            &quot;_id&quot; : 3,</div><div class="line">            &quot;name&quot; : &quot;node1:27018&quot;,</div><div class="line">            &quot;health&quot; : 1.0,</div><div class="line">            &quot;state&quot; : 7,</div><div class="line">            &quot;stateStr&quot; : &quot;ARBITER&quot;,</div><div class="line">            &quot;uptime&quot; : 16233,</div><div class="line">            &quot;lastHeartbeat&quot; : ISODate(&quot;2017-06-29T13:10:50.305Z&quot;),</div><div class="line">            &quot;lastHeartbeatRecv&quot; : ISODate(&quot;2017-06-29T13:10:50.843Z&quot;),</div><div class="line">            &quot;pingMs&quot; : NumberLong(0),</div><div class="line">            &quot;syncingTo&quot; : &quot;node2:27018&quot;,</div><div class="line">            &quot;configVersion&quot; : 5</div><div class="line">        &#125;</div><div class="line">    ],</div><div class="line">    &quot;ok&quot; : 1.0</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="7-参考文献"><a href="#7-参考文献" class="headerlink" title="7. 参考文献"></a>7. 参考文献</h2><blockquote>
<p>参考文档</p>
</blockquote>
<p><a href="https://docs.opsmanager.mongodb.com/current/core/installation-checklist/" target="_blank" rel="external">https://docs.opsmanager.mongodb.com/current/core/installation-checklist/</a><br><a href="https://docs.opsmanager.mongodb.com/current/core/requirements/#onprem-system-requirements" target="_blank" rel="external">https://docs.opsmanager.mongodb.com/current/core/requirements/#onprem-system-requirements</a><br><a href="https://docs.mongodb.com/manual/administration/production-notes/" target="_blank" rel="external">https://docs.mongodb.com/manual/administration/production-notes/</a></p>
<blockquote>
<p>参考博客</p>
</blockquote>
<p><a href="http://www.cnblogs.com/wsl222000/p/6742504.html" target="_blank" rel="external">http://www.cnblogs.com/wsl222000/p/6742504.html</a></p>
]]></content>
      <categories>
        <category>MongoDB</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Mongodb ReplicatSet 认证（KeyFile）</title>
    <url>/2017/07/27/Mongodb-%E9%9B%86%E7%BE%A4%E8%AE%A4%E8%AF%81%EF%BC%88KeyFile%EF%BC%89/</url>
    <content><![CDATA[<p>MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。在高负载的情况下，添加更多的节点，可以保证服务器性能。MongoDB的安全设置（<strong>特别是集群安全</strong>）一直是比较恼人的。那今天这篇文章就是来和大家聊聊使用Key File的ReplicatSet + User Role认证。</p>
<a id="more"></a>
<h2 id="1-下载MongoDB并创建数据文件夹"><a href="#1-下载MongoDB并创建数据文件夹" class="headerlink" title="1. 下载MongoDB并创建数据文件夹"></a>1. 下载MongoDB并创建数据文件夹</h2><p>MongoDB的下载可以直接通过镜像源或者是去官网下载安装包的方式，这里就不再赘述了。默认大家都会下载和安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 配置文件夹</span></div><div class="line">mkdir conf</div><div class="line"><span class="comment"># 日志文件夹</span></div><div class="line">mkdir <span class="built_in">log</span></div><div class="line"><span class="comment"># 日志文件</span></div><div class="line">touch <span class="built_in">log</span>/1.log</div><div class="line"><span class="comment"># 认证文件夹</span></div><div class="line">mkdir key</div></pre></td></tr></table></figure>
<h2 id="2-生成KeyFIle"><a href="#2-生成KeyFIle" class="headerlink" title="2. 生成KeyFIle"></a>2. 生成KeyFIle</h2><blockquote>
<p>随机生成keyFile或者手动写入,key的长度必须是6-1024的base64字符，unix下必须相同组权限</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="built_in">cd</span> key</div><div class="line">openssl rand -base64 600 &gt; mongodb.key</div></pre></td></tr></table></figure>
<ul>
<li>查看内容</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">xV7Ilo4O3+GHb57LECdoQwJ2u5DrcUsgHhzfXRrvvRVsnDaGNpp3qOvlTm1p3PjC</div><div class="line">L8gkVAV2vG/L8yG+HdBYgbZ/cEW49tlj/CSuK7wd4g/E40jk3uJPb8nMyXsZk4W1</div><div class="line">6TAL/5Teq5mY4VqAnuY1JqfPwgIyOYMn9ZCs5Wv/htnYR2n14hiw4bXe2ADaiD42</div><div class="line">kn7QhbuXxQBHxx3Yb/KTlEBqAm0aOAAueSbDvDwcnrsxoEcMnWq9gAhxzNmh9nv7</div><div class="line">E3b7JqKn/jo+ZIrfAropvbz7JqcPIUp0yfDsrolIlvRn965Z/+3ZJMQgU/QrLNjY</div><div class="line">wNcj7SqMXoXikTCalLycIbSWymX9dCMjOJ259k/ieU3LlGtLvWmozFlsG/Yu50w+</div><div class="line">kQ3uIH1Rq8KH1Gg35dtjr8sbObD/W4KEelwdTm3WqJIRZVVu6CYkDjBeSpXPSnrx</div><div class="line">C+DnN4U7PEZ8O07MRDps/oXcK2dXv1FmaoeTnQ7BzLITc0FSAa8oT4llBN2rXzQn</div><div class="line">XXdlLoZ8H71Z0+OeD1/h9qGIYfB3bKWzeoPY2cd3b37lQe9a5UVPX+1GEyiut5kv</div><div class="line">LgF3dgJ99/VmSvzBCdgwiMOu0eNxBvedqFnchMtqth85WJRMIcS5p2Pa8z7Wkjav</div><div class="line">8wUdPDf4udv7b4x8cgEdv4kNB/PPtHTUTsP51Y0Zlds=</div></pre></td></tr></table></figure>
<ul>
<li>修改key的权限</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 这里的权限一定要比 600(rw) 低, 否则会报 Permission 太高的错误(在log中)</span></div><div class="line">chmod 600 mongodb.key</div><div class="line"><span class="comment"># 查看权限</span></div><div class="line">ls -l</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">-rw------- 1 root root 1085 Jul 26 16:03 mongodb.key</div></pre></td></tr></table></figure>
<p><strong><code>将 keyFile 分发到每一个节点（如果是物理机）</code></strong></p>
<h2 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3. 配置文件"></a>3. 配置文件</h2><blockquote>
<p>模板 mongod.conf</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><div class="line"><span class="comment"># for documentation of all options, see:</span></div><div class="line"><span class="comment">#   http://docs.mongodb.org/manual/reference/configuration-options/</span></div><div class="line"></div><div class="line"><span class="comment"># Where and how to store data.</span></div><div class="line"><span class="attr">storage:</span></div><div class="line"><span class="attr">  dbPath:</span> <span class="string">/db/mongodb3/data</span></div><div class="line"><span class="attr">  journal:</span></div><div class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  directoryPerDB:</span> <span class="literal">true</span></div><div class="line"><span class="comment">#  engine:</span></div><div class="line"><span class="comment">#  mmapv1:</span></div><div class="line"><span class="comment">#  wiredTiger:</span></div><div class="line"></div><div class="line"><span class="comment"># where to write logging data.</span></div><div class="line"><span class="attr">systemLog:</span></div><div class="line"><span class="attr">  destination:</span> <span class="string">file</span></div><div class="line"><span class="attr">  logAppend:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  path:</span> <span class="string">/db/mongodb3/log/1.log</span></div><div class="line"></div><div class="line"><span class="comment"># network interfaces</span></div><div class="line"><span class="attr">net:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">28017</span></div><div class="line"> <span class="comment"># bindIp: 127.0.0.1</span></div><div class="line"></div><div class="line"><span class="attr">processManagement:</span></div><div class="line"><span class="attr">  fork:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># 指定keyFile后会自动开启auth</span></div><div class="line"><span class="attr">security:</span></div><div class="line"><span class="attr">  keyFile:</span> <span class="string">/db/mongodb3/key/key</span></div><div class="line"><span class="comment">#operationProfiling:</span></div><div class="line"></div><div class="line"><span class="attr">replication:</span></div><div class="line"><span class="attr">  replSetName:</span> <span class="string">DBTEST</span></div><div class="line"><span class="attr">  oplogSizeMB:</span> <span class="number">20480</span></div><div class="line"></div><div class="line"><span class="comment">#sharding:</span></div><div class="line"><span class="comment">## Enterprise-Only Options:</span></div><div class="line"><span class="comment">#auditLog:</span></div><div class="line"><span class="comment">#snmp:</span></div></pre></td></tr></table></figure>
<p><strong><code>注意:</code></strong></p>
<ul>
<li>所有的机器节点都要在防火墙上<strong>开启 mongodb 需要的端口</strong></li>
<li>keyFile的路径, 以及各种参数的<strong><code>大小写</code></strong></li>
<li>分片集或者复制集的<strong><code>每一个节点</code></strong>(物理或者虚拟)都要分开配置配置文件以及keyFile</li>
</ul>
<h2 id="3-启动"><a href="#3-启动" class="headerlink" title="3. 启动"></a>3. 启动</h2><p><strong><code>在每一个节点执行</code></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 配置文件名自定（可以使用conf，yaml）</span></div><div class="line">mongod -f mongod.conf</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">about to fork child process, waiting until server is ready <span class="keyword">for</span> connections.</div><div class="line">forked process: 9221</div><div class="line">child process started successfully, parent exiting</div></pre></td></tr></table></figure>
<h2 id="4-配置复制集"><a href="#4-配置复制集" class="headerlink" title="4. 配置复制集"></a>4. 配置复制集</h2><blockquote>
<p>连接Mongo [<strong><code>任意一个节点</code></strong>]</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">mongo --port 28017</div></pre></td></tr></table></figure>
<blockquote>
<p>配置:</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 最好是一次性初始化</span></div><div class="line">rs.initiate(&#123;_id:<span class="string">"cisdi"</span>,members:[</div><div class="line">&#123;_id:0,host:<span class="string">"x.x.x.x:28017"</span>,priority:5&#125;,</div><div class="line">&#123;_id:1,host:<span class="string">"x.x.x.x:28017"</span>,priority:10&#125;,</div><div class="line">&#123;_id:2,host:<span class="string">"x.x.x.x:28018"</span>,arbiterOnly:<span class="literal">true</span>&#125;</div><div class="line">]&#125;)</div></pre></td></tr></table></figure>
<p>或者用</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 添加rs节点</span></div><div class="line">rs.add(<span class="string">"xxxx:port"</span>)</div><div class="line"><span class="comment"># 添加rs仲裁节点</span></div><div class="line">rs.addArb(<span class="string">"xxxx:port"</span>)</div><div class="line"><span class="comment"># 删除rs节点</span></div><div class="line">rs.remove(<span class="string">"xxxx:port"</span>)</div></pre></td></tr></table></figure>
<blockquote>
<p>创建用户:</p>
</blockquote>
<p><strong><code>Notice：</code></strong></p>
<ul>
<li>你创建的第一个用户后，本地实例登陆失效，必须进行验证。</li>
<li>第一个用户<strong>必须创建其他用户的权限</strong>，如<kbd><strong><code>userAdminAnyDatabase</code></strong></kbd>,<kbd><strong><code>root</code></strong></kbd>权限用户</li>
<li>如果至少有一个用户没有创建用户的权限，一旦本地异常关闭你可能无法创建或修改新的特权用户</li>
</ul>
<blockquote>
<p>创建命令：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">db.createUser(</div><div class="line">&#123;</div><div class="line">	user:&quot;root&quot;,</div><div class="line">	pwd:&quot;123456&quot;,</div><div class="line">	roles:[&#123;role:&quot;root&quot;,db:&quot;admin&quot;&#125;]</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<blockquote>
<p>用户权限</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 全局超级管理员</span></div><div class="line">&#123;role:<span class="string">"root"</span>,db:<span class="string">"admin"</span>&#125;</div><div class="line"><span class="comment"># userAdminAnyDatabase 任何一个数据库的Admin用户</span></div><div class="line">&#123; role: <span class="string">"userAdminAnyDatabase"</span>, db: <span class="string">"admin"</span> &#125;</div><div class="line"><span class="comment"># clusterAdmin角色授予对复制操作的访问权限，例如配置副本集。</span></div><div class="line">&#123; <span class="string">"role"</span> : <span class="string">"clusterAdmin"</span>, <span class="string">"db"</span> : <span class="string">"admin"</span> &#125;</div></pre></td></tr></table></figure>
<p>数据库 Role:</p>
<ul>
<li><strong>dbAdmin</strong></li>
<li><strong>dbOwner</strong><br>数据库所有者可以对数据库执行任何管理操作。这个角色组合由授予的权限readWrite， dbAdmin和userAdmin角色</li>
<li><strong>userAdmin</strong><br>提供在当前数据库上创建和修改角色和用户的功能。该角色还间接地提供 对数据库的超级用户访问，或者如果作用于admin数据库的集群。该userAdmin角色允许用户授予任何用户任何特权，包括自己。</li>
<li><strong>read</strong><br>对当前数据库的读操作</li>
<li><strong>readWrite</strong><br>对当前数据库的读&amp;写操作</li>
</ul>
<p>全局 Role：</p>
<ul>
<li>readAnyDatabase （全局任何数据库读）</li>
<li>readWriteAnyDatabase</li>
<li>userAdminAnyDatabase （全局用户管理）</li>
<li>dbAdminAnyDatabase（全局数据库管理）</li>
</ul>
<p>集群 Role：</p>
<ul>
<li><strong>clusterAdmin</strong><br>提供最大的集群管理访问。这个角色组合由授予的权限clusterManager， clusterMonitor和hostManager角色</li>
<li><strong>clusterManager</strong><br>在集群上提供管理和监控动作。具有该角色的用户可以访问config和local数据库，其在分片和复制所使用的</li>
<li><strong>clusterMonitor</strong><br>提供对监控工具（如MongoDB Cloud Manager和Ops Manager监控代理）的只读访问 。</li>
<li><strong>hostManager</strong><br>提供监控和管理服务器的能力。</li>
</ul>
<h3 id="设置从库可读"><a href="#设置从库可读" class="headerlink" title="设置从库可读"></a>设置从库可读</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">rs.slaveOk()</div></pre></td></tr></table></figure>
<blockquote>
<p>设置读写方式</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment">#Primary               #从主的读，默认</span></div><div class="line"><span class="comment">#primaryPreferred      #基本上从主的读，主不可用时，从从的读</span></div><div class="line"><span class="comment">#secondary             #从从的读</span></div><div class="line"><span class="comment">#secondaryPreferred    #基本上从从的读，从不可用时，从主的读</span></div><div class="line"><span class="comment">#nearest               #从网络延迟最小的读</span></div><div class="line">db.getMongo().setReadPref(<span class="string">'secondaryPreferred'</span>)</div></pre></td></tr></table></figure>
<h3 id="关闭服务"><a href="#关闭服务" class="headerlink" title="关闭服务"></a>关闭服务</h3><blockquote>
<p>使用db admin关闭</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 1. 登陆mongo</span></div><div class="line"><span class="comment"># 2. 使用admin</span></div><div class="line">use admin</div><div class="line"><span class="comment"># 3. 关闭mongodb服务</span></div><div class="line">db.shutdownServer();</div></pre></td></tr></table></figure>
<blockquote>
<p>通过mongod关闭</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">mongod --shutdown --dbpath path</div></pre></td></tr></table></figure>
<blockquote>
<p>通过PID关闭</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 找到mongodb.pid</span></div><div class="line"><span class="built_in">kill</span> -2 mongodb.pid</div></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MongoDB</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 分区（目录）挂载/扩容</title>
    <url>/2017/07/17/Ubuntu-%E5%88%86%E5%8C%BA%EF%BC%88%E7%9B%AE%E5%BD%95%EF%BC%89%E6%8C%82%E8%BD%BD-%E6%89%A9%E5%AE%B9/</url>
    <content><![CDATA[<p>这次写的教程是经过我多次验证，用于对Ubuntu分区（目录）操作的一些经验。分享给大家，希望能够有所帮助。</p>
<p><strong>友善提醒：硬盘操作有风险，请注意备份自己的重要资料。如果不熟练，请在虚拟机上自己多操作几次，再在Server上面操作</strong></p>
<a id="more"></a>
<h2 id="1-为啥会被分区容量所困扰？"><a href="#1-为啥会被分区容量所困扰？" class="headerlink" title="1.为啥会被分区容量所困扰？"></a>1.为啥会被分区容量所困扰？</h2><p>通常情况下，我们在使用Ubuntu还是没啥大毛病。可是有一天，突然在解开锁屏的时候，突然弹出如下警告。。。</p>
<p><img src="https://pic3.zhimg.com/v2-88408a07f66d85e07a333c6e22c881ea_b.png" alt="磁盘空间不足提示"></p>
<p>系统磁盘容量不足！！！这个时候就有点烦心了。左思右想，有如下几种应急方法（欢迎添加）</p>
<ul>
<li>先去删一波 /tmp, /var/cache/apt/archives下面的临时文件， 删掉不用的软件和遗留的目录、日志</li>
<li>autoremove, autoclean 删掉多余的 lib</li>
<li>删掉/home下面多余的文档</li>
<li>添加新的硬盘<br>前三种方法都是暂时性的应急，不是长久之计。而且，当你的硬盘里面存了大量的重要的资料的时候（譬如用户的数据，重要的数据文件等），这个时候就不得不采用第四种方案了。</li>
</ul>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><blockquote>
<p>将新的硬盘挂载到需要添加存储介质的目录下（根据实际需要）</p>
</blockquote>
<h2 id="1-查看磁盘信息"><a href="#1-查看磁盘信息" class="headerlink" title="1. 查看磁盘信息"></a>1. 查看磁盘信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">sudo fdisk -l</div></pre></td></tr></table></figure>
<p><img src="/2017/07/17/Ubuntu-分区（目录）挂载-扩容/1.png" alt="磁盘信息"></p>
<p>作为测试，我选取 /dev/sda5, 想要将其挂载到 /home/nutao/disk/D 下面</p>
<p>查看硬盘使用情况用如下命令：<br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">df -kh</div></pre></td></tr></table></figure></p>
<h2 id="2-查看硬盘-UUID-和-磁盘类型"><a href="#2-查看硬盘-UUID-和-磁盘类型" class="headerlink" title="2. 查看硬盘 UUID 和 磁盘类型"></a>2. 查看硬盘 UUID 和 磁盘类型</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">sudo blkid</div></pre></td></tr></table></figure>
<p><img src="/2017/07/17/Ubuntu-分区（目录）挂载-扩容/2.png" alt="UUID"></p>
<p>用记事本或者其他工具记录下 /dev/sda5 的UUID和分区格式（建议将新的硬盘分区为ext4）</p>
<h2 id="3-取消挂载目标盘"><a href="#3-取消挂载目标盘" class="headerlink" title="3. 取消挂载目标盘"></a>3. 取消挂载目标盘</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">sudo umount /dev/sda5</div></pre></td></tr></table></figure>
<h2 id="4-编辑-etc-fstab-文件"><a href="#4-编辑-etc-fstab-文件" class="headerlink" title="4. 编辑 /etc/fstab 文件"></a>4. 编辑 /etc/fstab 文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">sudo vi /etc/fstab</div></pre></td></tr></table></figure>
<p>追加一行内容<br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">UUID=0008DCD1000EA709 /home/nutao/disk/D    ntfs    defaults    0   2</div></pre></td></tr></table></figure></p>
<p>其中第一列为UUID, 第二列为挂载目录（该目录必须为空目录），第三列为文件系统类型，第四列为参数，第五列0表示不备份，最后一列必须为２或0(除非引导分区为1)</p>
<h2 id="5-更新引导（千万记得更新，否则重启会出错）"><a href="#5-更新引导（千万记得更新，否则重启会出错）" class="headerlink" title="5. 更新引导（千万记得更新，否则重启会出错）"></a>5. 更新引导（千万记得更新，否则重启会出错）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">sudo update-grub</div><div class="line">sudo update-grub2</div></pre></td></tr></table></figure>
<hr>
<h2 id="Linux下分区工具-gparted"><a href="#Linux下分区工具-gparted" class="headerlink" title="Linux下分区工具 gparted"></a>Linux下分区工具 gparted</h2><p>安装命令<br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># Debian</span></div><div class="line">sudo apt-get install gparted</div><div class="line"></div><div class="line"><span class="comment"># Fedora</span></div><div class="line">su -c <span class="string">"yum install gparted"</span></div><div class="line"></div><div class="line"><span class="comment"># OpenSUSE</span></div><div class="line">sudo zypper install gparted</div><div class="line"></div><div class="line"><span class="comment"># Ubuntu</span></div><div class="line">sudo apt-get install gparted</div></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 换源，安装&amp;卸载软件</title>
    <url>/2017/07/17/Ubuntu-%E6%8D%A2%E6%BA%90%EF%BC%8C%E5%AE%89%E8%A3%85-%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<p>国内的筒子们，经常发现在update的时候各种卡。。。有时候心情好，等等也就罢了。万一某一天急着安装软件，那种状态下，真的是多等一秒感觉都是心烦气躁的。所以，本文就来跟大家聊聊在Ubuntu 中换源，安装&amp;卸载软件的那些事，欢迎各位一起交流。。。<br><img src="/images/ubuntu16.04.png" alt="Ubuntu16.04"><br><a id="more"></a></p>
<h2 id="1-查找国内的开源镜像提供的源地址"><a href="#1-查找国内的开源镜像提供的源地址" class="headerlink" title="1. 查找国内的开源镜像提供的源地址"></a>1. 查找国内的开源镜像提供的源地址</h2><blockquote>
<p>Ubuntu的源的list文件位于 <code>/etc/apt/sources.list</code></p>
</blockquote>
<ul>
<li>高校镜像源（国内其他大学也有提供，可自行查找）<br><a href="http://link.zhihu.com/?target=https%3A//mirrors.tuna.tsinghua.edu.cn/help/ubuntu/" title="清华大学开源镜像站" target="_blank" rel="external">清华大学开源镜像站 </a><br><a href="http://link.zhihu.com/?target=https%3A//mirrors.ustc.edu.cn/repogen/" title="中科大开源镜像站" target="_blank" rel="external">中科大开源镜像站</a></li>
</ul>
<ul>
<li>企业镜像源（其他企业的请自行查找）<br><a href="http://link.zhihu.com/?target=http%3A//mirrors.aliyun.com/help/ubuntu" title="阿里云开源镜像站" target="_blank" rel="external">阿里云开源镜像站 </a><br><a href="http://link.zhihu.com/?target=http%3A//mirrors.163.com/.help/ubuntu.html" title="网易开源镜像站" target="_blank" rel="external">网易开源镜像站</a></li>
</ul>
<p><strong>这里以清华源为例</strong></p>
<p>先去查一下清华源的帮助文档，戳 <a href="http://link.zhihu.com/?target=https%3A//mirrors.tuna.tsinghua.edu.cn/help/ubuntu/" title="清华大学开源镜像站" target="_blank" rel="external">清华大学开源镜像站 </a>，选择相匹配的Ubuntu的版本，会得到软件源镜像的地址。</p>
<p>接下来直接替换一下系统的source.list文件~~~</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 备份一下</span></div><div class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</div><div class="line"><span class="comment"># 修改</span></div><div class="line">sudo vi /etc/apt/sources.list</div></pre></td></tr></table></figure>
<p>将文档里面所有的内容删除，然后替换为清华镜像提供的软件源镜像的地址。<br>例如我用的 16.04 版， 替换为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span></div><div class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</div><div class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span></div><div class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</div><div class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span></div><div class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</div><div class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span></div><div class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</div><div class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span></div></pre></td></tr></table></figure>
<p>然后再update一下，你会发现速度还是有明显的提升的。<br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">sudo apt update</div></pre></td></tr></table></figure></p>
<h2 id="2-使用apt安装软件"><a href="#2-使用apt安装软件" class="headerlink" title="2. 使用apt安装软件"></a>2. 使用apt安装软件</h2><p>这个就不多说了，比较简单，譬如安装tree<br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">sudo apt install tree -y</div></pre></td></tr></table></figure></p>
<p>这里的 -y 参数是为了在安装的时候默认选择yes</p>
<h2 id="3-deb包安装-amp-卸载（需要先下载好）"><a href="#3-deb包安装-amp-卸载（需要先下载好）" class="headerlink" title="3. deb包安装&amp;卸载（需要先下载好）"></a>3. deb包安装&amp;卸载（需要先下载好）</h2><ul>
<li><p>安装命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">sudo dpkg -i xxx.deb</div></pre></td></tr></table></figure>
</li>
<li><p>安装依赖（如果提示需要的话）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">sudo apt-get install -f</div></pre></td></tr></table></figure>
</li>
<li><p>自动清除残留配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">sudo apt-get autoclean</div><div class="line">sudo apt-get autoremove</div></pre></td></tr></table></figure>
</li>
<li><p>完全卸载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">sudo apt-get remove --purge name</div></pre></td></tr></table></figure>
</li>
</ul>
<p>一般来说，这样的卸载会比较干净地卸载掉软件。有些没有办法自动删除的文件，可以手动去删除掉</p>
<h2 id="4-另一种deb包安装方式"><a href="#4-另一种deb包安装方式" class="headerlink" title="4. 另一种deb包安装方式"></a>4. 另一种deb包安装方式</h2><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="comment"># cd到安装包目录</span></div><div class="line">sudo apt install ./xxxx.deb</div></pre></td></tr></table></figure>
<h2 id="5-安装filename-tar-gz软件"><a href="#5-安装filename-tar-gz软件" class="headerlink" title="5. 安装filename.tar.gz软件"></a>5. 安装filename.tar.gz软件</h2><ul>
<li>解压</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">tar -xzvf file.tar.gz</div></pre></td></tr></table></figure>
<ul>
<li>然后在解压目录或者bin文件夹中执行setup.sh文件。。。这个一般不定，安装前最好查一下官网说明</li>
</ul>
<h2 id="6-源码安装"><a href="#6-源码安装" class="headerlink" title="6. 源码安装"></a>6. 源码安装</h2><p>有些软件没有被收录进软件镜像源，或者说开发者需要去使用他们最新的版本，这时候就要自己去他们的官网或者是代码托管平台下载最新的Linux源码，自己来build。</p>
<p>这种方式安装需<strong>要解决很多的依赖</strong>。。。。安装前，多问问度娘，Google</p>
<p>此处还是以tree为例：</p>
<ul>
<li>先去 <a href="http://link.zhihu.com/?target=ftp%3A//mama.indstate.edu/linux/tree/" title="Tree FTP" target="_blank" rel="external">Tree FTP</a> 下载最新的源码包</li>
<li>解压</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">tar zxf tree-1.7.0.tgz</div><div class="line"><span class="built_in">cd</span>  tree-1.7.0/</div><div class="line">make and install</div><div class="line">sudo make</div><div class="line">sudo make install</div></pre></td></tr></table></figure>
<p><strong>如果没有配置g++环境，先用apt安装build-essential</strong></p>
<ul>
<li>OK, 大功告成<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">nutao@master:~/Public/tree-1.7.0$ tree</div><div class="line">.</div><div class="line">├── CHANGES</div><div class="line">├── color.c</div><div class="line">├── color.o</div><div class="line">├── doc</div><div class="line">│   ├── tree.1</div><div class="line">│   ├── tree.1.fr</div><div class="line">│   └── xml.dtd</div><div class="line">├── hash.c</div><div class="line">├── hash.o</div><div class="line">├── html.c</div><div class="line">├── html.o</div><div class="line">├── INSTALL</div><div class="line">├── json.c</div><div class="line">├── json.o</div><div class="line">├── LICENSE</div><div class="line">├── Makefile</div><div class="line">├── README</div><div class="line">├── strverscmp.c</div><div class="line">├── TODO</div><div class="line">├── tree</div><div class="line">├── tree.c</div><div class="line">├── tree.h</div><div class="line">├── tree.o</div><div class="line">├── unix.c</div><div class="line">├── unix.o</div><div class="line">├── xml.c</div><div class="line">└── xml.o</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="常用压缩文件的解压命令"><a href="#常用压缩文件的解压命令" class="headerlink" title="常用压缩文件的解压命令"></a>常用压缩文件的解压命令</h2><p>1、<em>.tar 用 tar –xvf 解压<br>2、</em>.gz 用 gzip -d或者gunzip 解压<br>3、.tar.gz和.tgz 用 tar –xzf 解压<br>4、<em>.bz2 用 bzip2 -d或者用bunzip2 解压<br>5、</em>.tar.bz2用tar –xjf 解压<br>6、<em>.Z 用 uncompress 解压<br>7、</em>.tar.Z 用tar –xZf 解压<br>8、<em>.rar 用 unrar e解压<br>9、</em>.zip 用 unzip 解压</p>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu16.04 Grub Rescue</title>
    <url>/2017/07/13/Ubuntu16-04-Grub-Rescue/</url>
    <content><![CDATA[<p>如果某一天, 你不小心扩展了一下你的 / 目录, 又忘记了更新 grub 引导. 不好意思, 你有麻烦了</p>
<p><img src="/images/1.png" alt="grub"></p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><a id="more"></a>
<h4 id="1-ls-一下所有的盘符"><a href="#1-ls-一下所有的盘符" class="headerlink" title="1. ls 一下所有的盘符"></a>1. ls 一下所有的盘符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grub rescue&gt; ls</div></pre></td></tr></table></figure>
<h4 id="2-找-boot-grub的分区"><a href="#2-找-boot-grub的分区" class="headerlink" title="2. 找/boot/grub的分区"></a>2. 找/boot/grub的分区</h4><blockquote>
<p>如果你的 /boot 没有单独分区, 请执行</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grub rescue&gt; ls (hd0,msdosx)/boot/grub</div></pre></td></tr></table></figure>
<blockquote>
<p>如果你的 /boot 单独分区啦, 请执行</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grub rescue&gt; ls (hd0,msdosx)/grub</div></pre></td></tr></table></figure>
<p>ls出如下的目录, 恭喜你找到 /boot 路径了</p>
<h4 id="3-修复grub引导"><a href="#3-修复grub引导" class="headerlink" title="3. 修复grub引导"></a>3. 修复grub引导</h4><blockquote>
<p>假设/boot 在(hd0,msdos3) 中</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># /boot 单独分区</div><div class="line">set root=(hd0,msdos3)</div><div class="line">set prefix=(hd0,msdos3)/grub</div><div class="line">insmod normal</div><div class="line">normal</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># /boot 没有单独分区</div><div class="line">set root=(hd0,msdos3)</div><div class="line">set prefix=(hd0,msdos3)/boot/grub</div><div class="line">insmod normal</div><div class="line">normal</div></pre></td></tr></table></figure>
<p>正常情况下, 执行完后, 电脑就能开机进入桌面啦<br>然后, 还没有结束. (这时千万不要关机, 否则前面步骤再来一次)<br><strong>在正常进入系统以后…</strong></p>
<h4 id="4-更新系统-grub-引导"><a href="#4-更新系统-grub-引导" class="headerlink" title="4. 更新系统 grub 引导"></a>4. 更新系统 grub 引导</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo update-grub</div><div class="line">sudo update-grub2</div></pre></td></tr></table></figure>
<blockquote>
<p>打印出如下日志(我是双系统)<br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">Generating grub configuration file ...</div><div class="line">Found linux image: /boot/vmlinuz-4.4.0-66-generic</div><div class="line">Found initrd image: /boot/initrd.img-4.4.0-66-generic</div><div class="line">Found memtest86+ image: /memtest86+.elf</div><div class="line">Found memtest86+ image: /memtest86+.bin</div><div class="line">Found Windows 10 (loader) on /dev/sda1</div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure></p>
<p>然后重新安装grub</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">nutao@nutao-HP:~$ sudo grub-install /dev/sda</div><div class="line"># 日志</div><div class="line">Installing for i386-pc platform.</div><div class="line">Installation finished. No error reported.</div></pre></td></tr></table></figure>
<h4 id="OK-一切搞定"><a href="#OK-一切搞定" class="headerlink" title="OK, 一切搞定"></a>OK, 一切搞定</h4>]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2017/07/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">hexo new <span class="string">"My New Post"</span></div><div class="line"><span class="comment"># OR</span></div><div class="line">hexo n <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">hexo server</div><div class="line"><span class="comment"># OR</span></div><div class="line">hexo s</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">hexo generate</div><div class="line"><span class="comment"># OR</span></div><div class="line">hexo g</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">hexo deploy</div><div class="line"><span class="comment"># OR</span></div><div class="line">hexo d</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
